{"version":3,"file":"static/webpack/static/development/pages/index.js.82184e4976cda6099edc.hot-update.js","sources":["webpack:///./components/Form/RandomNationId/index.js","webpack:///./libraries/randomNationId.js"],"sourcesContent":["// // import { Component } from 'react'\nimport { Input } from 'antd'\nimport React from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport RandomNationId from '../../../libraries/randomNationId'\n\nconst { Search } = Input\nclass Da extends React.Component {\n  state = {\n    value: 'hello world',\n    copied: false,\n  }\n\n  render() {\n    return (\n      <div>\n        <CopyToClipboard\n          text={this.state.value}\n          onCopy={() => this.setState({ copied: true })}\n        >\n          <Search\n            placeholder=\"input search text\"\n            enterButton=\"Search\"\n            readOnly\n            value={this.state.value}\n            size=\"large\"\n            onSearch={value => console.log(value)}\n          />\n        </CopyToClipboard>\n\n        {this.state.copied ? (\n          <span style={{ color: 'red' }}>Copied.</span>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport default Da\n","function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\n}\nlet status = false;\nconst badNationid = [];\nlet goodNationid = [];\n\nwhile (goodNationid.length !== 5) {\n  let currentGood = \"\";\n  while (status === false) {\n    const currentNationId = getRandomInt(\n      1212121212121,\n      9999999999999\n    ).toString();\n\n    const sameNationId = badNationid.filter(item => item === currentNationId);\n    if (sameNationId.length >= 1) {\n      continue;\n    }\n\n    const reducer = (accumulator, currentValue, currentIndex) =>\n      currentIndex < currentNationId.length - 1\n        ? accumulator + parseFloat(currentValue) * (13 - currentIndex)\n        : accumulator;\n\n    const sum = Array.from(currentNationId).reduce(reducer, 0);\n\n    const ok =\n      (11 - (sum % 11)) % 10 === parseFloat(currentNationId.charAt(12));\n    if (ok) {\n      status = true;\n      currentGood = currentNationId;\n    } else {\n      badNationid.push(currentNationId);\n    }\n  }\n\n  status = false;\n  goodNationid.push(currentGood);\n}\n\nconsole.log(\"counter random \", badNationid.length, \" times\");\nconsole.log(\"You can use \\n\", goodNationid);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA5BA;AACA;AA8BA;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAGA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AACA;AAAA;AACA;AADA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}